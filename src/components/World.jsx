/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/world.glb 
*/

import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import gsap from 'gsap'
import React, { useLayoutEffect, useRef} from 'react'

export function World(props) {
  const { nodes, materials } = useGLTF('./models/world.glb')
  const ref = useRef()
  const ref_door = useRef()
  const tl = useRef()

  const scroll = useScroll()

  useFrame(() => {
    if(tl.current) {
      tl.current.seek(scroll.offset * tl.current.duration())
    }
  })

  useLayoutEffect(() => {
    tl.current = gsap.timeline()

    tl.current.to(ref.current.position, {x: 65, duration: 1}, 0)
    tl.current.to(ref_door.current.position, {y: 18, duration: .6}, 0)
    tl.current.to(ref.current.rotation, {y: 0, duration: 1}, 0)
  }, [])

  return (

    <group {...props} dispose={null} position={[45, -5.5, -1.5]} rotation={[0, -0.25, 0]} ref={ref}>
      <mesh geometry={nodes.Door.geometry} material={materials.Door} scale={[1, 1, 1]} position={[-4.9, 9, 2.3]} ref={ref_door}/>
      
      <mesh geometry={nodes.Ch36.geometry} material={materials.HUMAN} position={[-5.384, 0.704, -2.477]} rotation={[Math.PI / 2, 0, -1.484]} scale={0.024} />
      <mesh geometry={nodes.Ch36001.geometry} material={materials.HUMAN} position={[-4.137, 0.68, 6.059]} rotation={[Math.PI / 2, 0, -0.243]} scale={0.02} />
      <mesh geometry={nodes.Ch36002.geometry} material={materials.HUMAN} position={[-0.939, 0.68, -3.013]} rotation={[Math.PI / 2, 0, -0.056]} scale={0.02} />
      <mesh geometry={nodes.Cylinder.geometry} material={materials.HUMAN} position={[-5.036, 1.867, -3.329]} />
      <mesh geometry={nodes.Cylinder001.geometry} material={materials.HUMAN} position={[-4.215, 2.795, 6.888]} />
      <mesh geometry={nodes.Cylinder002.geometry} material={materials.HUMAN} position={[-3.732, 2.795, 7.664]} />
      <mesh geometry={nodes.Cylinder003.geometry} material={materials.HUMAN} position={[-4.119, 2.688, 7.297]} />
      {/* <mesh geometry={nodes.Ch36003.geometry} material={materials.HUMAN} position={[-0.412, 0.676, 7.311]} rotation={[Math.PI / 2, 0, 2.436]} scale={0.02} /> */}
      <mesh geometry={nodes.Ch36004.geometry} material={materials.HUMAN} position={[-4.496, 0.676, 8.663]} rotation={[-Math.PI / 2, 0, -Math.PI]} scale={-0.02} />
      {/* <mesh geometry={nodes.Ch36005.geometry} material={materials['HUMAN 2']} position={[-17.91, 2.423, 2.41]} rotation={[Math.PI / 2, 0, -1.467]} scale={0.02} /> */}

      <mesh geometry={nodes.Plane.geometry} material={materials['Shade 1']} />
      <mesh geometry={nodes.Plane_1.geometry} material={materials['Shade 2']} />
      <mesh geometry={nodes.Plane_2.geometry} material={materials['Shade 3']} />
      <mesh geometry={nodes.Plane_3.geometry} material={materials.Red} />

      
    </group>


  )
}

useGLTF.preload('./models/world.glb')
